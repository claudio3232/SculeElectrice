/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proiectpoo;

/**
 *
 * @author nechi
 */

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.ArrayList;

public class tabel_polizor_slefuitor extends javax.swing.JFrame {

    /**
     * Creates new form tabel_polizor_slefuitor
     */
    public tabel_polizor_slefuitor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pFirma = new javax.swing.JTextField();
        pPutere = new javax.swing.JTextField();
        pGreutate = new javax.swing.JTextField();
        pTuratii = new javax.swing.JTextField();
        pPornire = new javax.swing.JTextField();
        pDiametrul = new javax.swing.JTextField();
        pTipDisc = new javax.swing.JTextField();
        pTipAlimentare = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        sFirma = new javax.swing.JTextField();
        sPutere = new javax.swing.JTextField();
        sGreutate = new javax.swing.JTextField();
        sDimensiune = new javax.swing.JTextField();
        sProfesional = new javax.swing.JTextField();
        sViteza = new javax.swing.JTextField();
        sSuprafata = new javax.swing.JTextField();
        sGarantie = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Firma", "Putere (W)", "Greutate (kg)", "Turatii maxime (RPM)", "Pornire lina", "Diametrul discului (mm)", "Tip disc", "Tip alimentare"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        pFirma.setText("Bosch");
        pFirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pFirmaActionPerformed(evt);
            }
        });

        pPutere.setText("1500");
        pPutere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pPutereActionPerformed(evt);
            }
        });

        pGreutate.setText("5");
        pGreutate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pGreutateActionPerformed(evt);
            }
        });

        pTuratii.setText("12000");

        pPornire.setText("Da");

        pDiametrul.setText("25");
        pDiametrul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pDiametrulActionPerformed(evt);
            }
        });

        pTipDisc.setText("Diamantat");

        pTipAlimentare.setText("Electric");
        pTipAlimentare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pTipAlimentareActionPerformed(evt);
            }
        });

        jLabel1.setText("Firma");

        jLabel2.setText("Putere");

        jLabel3.setText("Greutate");

        jLabel4.setText("Turatii maxime");

        jLabel5.setText("Pornire lina");

        jLabel6.setText("Diametrul disc");

        jLabel7.setText("Tip disc");

        jLabel8.setText("Tip alimentare");

        jButton1.setText("Salveaza");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Conditie");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Greutate");

        jLabel10.setText("Firma");

        jLabel11.setText("Putere");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Firma", "Putere (W)", "Greutate (kg)", "Dimensiune disc (mm)", "Profesional", "Viteza variabila", "Tip suprafata", "Garantie (luni)"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        sFirma.setText("Makita");
        sFirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sFirmaActionPerformed(evt);
            }
        });

        sPutere.setText("900");
        sPutere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sPutereActionPerformed(evt);
            }
        });

        sGreutate.setText("2.8");
        sGreutate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sGreutateActionPerformed(evt);
            }
        });

        sDimensiune.setText("130");

        sProfesional.setText("Nu");

        sViteza.setText("Da");

        sSuprafata.setText("Metal");

        sGarantie.setText("36");
        sGarantie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sGarantieActionPerformed(evt);
            }
        });

        jLabel12.setText("Dimensiune disc");

        jLabel13.setText("Profesional");

        jLabel14.setText("Viteza variabila");

        jLabel15.setText("Tip suprafata");

        jLabel16.setText("Garantie");

        jButton4.setText("Salveaza");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setForeground(new java.awt.Color(255, 51, 51));
        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setForeground(new java.awt.Color(255, 51, 51));
        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton3.setText("Conditie");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pTipAlimentare, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pTuratii, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pPornire, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pDiametrul, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pTipDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pPutere, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pFirma, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pGreutate, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 967, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sFirma, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(jLabel12))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(sPutere, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sGreutate, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sDimensiune, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sProfesional, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sGarantie, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sSuprafata, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sViteza, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(pFirma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pPutere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pGreutate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pTuratii, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pPornire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pDiametrul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(32, 32, 32))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pTipDisc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(pTipAlimentare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton1)
                            .addComponent(jButton5))))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sFirma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sPutere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sGreutate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sDimensiune, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sProfesional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sViteza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sSuprafata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sGarantie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pGreutateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pGreutateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pGreutateActionPerformed

    private void pDiametrulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pDiametrulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pDiametrulActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
        if (pFirma.getText().trim().isEmpty() || 
            pPutere.getText().trim().isEmpty() || 
            pGreutate.getText().trim().isEmpty() || 
            pTuratii.getText().trim().isEmpty() ||
            pPornire.getText().trim().isEmpty() ||
            pDiametrul.getText().trim().isEmpty() || 
            pTipDisc.getText().trim().isEmpty() || 
            pTipAlimentare.getText().trim().isEmpty()) {
            throw new Exception("Nu ai completat toate campurile!");
        }
        
        String firma = pFirma.getText().trim();
        String tipDisc = pTipDisc.getText().trim();
        String tipAlimentare = pTipAlimentare.getText().trim();
        
        if (!firma.matches("[a-zA-Z]+")) {
            throw new Exception("Firma trebuie sa contina doar litere!");
        }
        if (!tipDisc.matches("[a-zA-Z]+")) {
            throw new Exception("Tipul discului trebuie sa contina doar litere!");
        }
        if (!tipAlimentare.matches("[a-zA-Z]+")) {
            throw new Exception("Tipul alimentarii trebuie sa contina doar litere!");
        }
        
        
        Polizor polizor = new Polizor();
        
        polizor.setFirma(pFirma.getText());
         
        try {
            polizor.setPutere(Integer.parseInt(pPutere.getText()));
        } catch (NumberFormatException e) {
            throw new Exception("Puterea trebuie sa fie un numar intreg!");
        }
        
         try {
            polizor.setGreutate(Float.parseFloat(pGreutate.getText()));
        } catch (NumberFormatException e) {
            throw new Exception("Greutatea trebuie sa fie de tip float!");
        }
         
        try {
            polizor.setTuratiiMaxime(Integer.parseInt(pTuratii.getText()));
        } catch (NumberFormatException e) {
            throw new Exception("Turatiile maxime trebuie sa fie un numar intreg!");
        }
        
        String pornireText = pPornire.getText().trim().toLowerCase();
        boolean pornireLina = pornireText.equalsIgnoreCase("da");
        polizor.setArePornireLina(pornireLina);
        
        
         try {
            polizor.setDiametrulDiscului(Float.parseFloat(pDiametrul.getText()));
        } catch (NumberFormatException e) {
            throw new Exception("Diametrul discului trebuie sa fie un numar real!");
        }
         
        polizor.setTipDisc(pTipDisc.getText());
        polizor.setTipAlimentare(pTipAlimentare.getText());
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    model.addRow(new Object[]{
        polizor.getFirma(),
        polizor.getPutere(),
        polizor.getGreutate(),
        polizor.getTuratiiMaxime(),
        polizor.isArePornireLina(),
        polizor.getDiametrulDiscului(),
        polizor.getTipDisc(),
        polizor.getTipAlimentare()
    });
    
         } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Eroare", JOptionPane.ERROR_MESSAGE);
    }
        
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// Le afiseaza pe cele cu turatiile maxime mai mari de 13000RPM, care au pornire lina si le afiseaza in ordinea greutatii crescator.    
    try {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    List<Polizor> polizoare = new ArrayList<>();

    for (int i = 0; i < model.getRowCount(); i++) {
        String firma = (String) model.getValueAt(i, 0);

        String putereText = model.getValueAt(i, 1).toString();
        int putere = 0;
        try {
            putere = Integer.parseInt(putereText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Puterea nu este valida: " + putereText);
        }

        float greutate = 0;
        try {
            greutate = Float.parseFloat(model.getValueAt(i, 2).toString());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Greutatea nu este valida: " + model.getValueAt(i, 2).toString());
        }

        int turatiiMaxime = (int) model.getValueAt(i, 3);
        boolean pornireLina = (boolean) model.getValueAt(i, 4);
        float diametrulDiscului = (float) model.getValueAt(i, 5);
        String tipDisc = (String) model.getValueAt(i, 6);
        String tipAlimentare = (String) model.getValueAt(i, 7);

        if (turatiiMaxime > 13000 && pornireLina) {
            Polizor polizor = new Polizor();
            polizor.setFirma(firma);
            polizor.setPutere(putere);
            polizor.setGreutate(greutate);
            polizor.setTuratiiMaxime(turatiiMaxime);
            polizor.setArePornireLina(pornireLina);
            polizor.setDiametrulDiscului(diametrulDiscului);
            polizor.setTipDisc(tipDisc);
            polizor.setTipAlimentare(tipAlimentare);

            polizoare.add(polizor);
        }
    }

    Collections.sort(polizoare, new Comparator<Polizor>() {
        @Override
        public int compare(Polizor p1, Polizor p2) {
            return Float.compare(p1.getGreutate(), p2.getGreutate());
        }
    });

    model.setRowCount(0);

    for (Polizor polizor : polizoare) {
        model.addRow(new Object[]{
            polizor.getFirma(),
            polizor.getPutere(),
            polizor.getGreutate(),
            polizor.getTuratiiMaxime(),
            polizor.isArePornireLina(),
            polizor.getDiametrulDiscului(),
            polizor.getTipDisc(),
            polizor.getTipAlimentare()
        });
    }

    if (polizoare.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Nu s-au gasit polizoare care sa respecte conditiile specificate!");
    }
    
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Eroare la sortare: " + e.getMessage(), "Eroare", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_jButton2ActionPerformed

    private void pPutereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pPutereActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pPutereActionPerformed

    private void sPutereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sPutereActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sPutereActionPerformed

    private void sFirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sFirmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sFirmaActionPerformed

    private void sGreutateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sGreutateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sGreutateActionPerformed

    private void sGarantieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sGarantieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sGarantieActionPerformed

    private void pTipAlimentareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pTipAlimentareActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pTipAlimentareActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       
        try {
        if (sFirma.getText().trim().isEmpty() || 
            sPutere.getText().trim().isEmpty() || 
            sGreutate.getText().trim().isEmpty() || 
            sDimensiune.getText().trim().isEmpty() || 
            sProfesional.getText().trim().isEmpty() || 
            sViteza.getText().trim().isEmpty() || 
            sSuprafata.getText().trim().isEmpty() ||
            sGarantie.getText().trim().isEmpty()) {
            throw new Exception("Nu ai completat toate campurile!");
        }
        
        String firma = sFirma.getText().trim();
        String suprafata = sSuprafata.getText().trim();
        
        if (!firma.matches("[a-zA-Z]+")) {
            throw new Exception("Firma trebuie sa contina doar litere!");
        }
        if (!suprafata.matches("[a-zA-Z]+")) {
            throw new Exception("Su[rafata trebuie sa contina doar litere!");
        }
        
        
        Slefuitor slefuitor = new Slefuitor();
        
        slefuitor.setFirma(sFirma.getText());
         
        try {
            slefuitor.setPutere(Integer.parseInt(sPutere.getText()));
        } catch (NumberFormatException e) {
            throw new Exception("Puterea trebuie sa fie un numar intreg!");
        }
        
         try {
            slefuitor.setGreutate(Float.parseFloat(sGreutate.getText()));
        } catch (NumberFormatException e) {
            throw new Exception("Greutatea trebuie sa fie de tip float!");
        }
         
        try {
            slefuitor.setDimensiuneDisc(Float.parseFloat(sDimensiune.getText()));
        } catch (NumberFormatException e) {
            throw new Exception("Dimensiunea discului trebuie sa fie de tip float!");
        }
        
        String pornireText = sProfesional.getText().trim().toLowerCase();
        boolean esteProfesional = pornireText.equalsIgnoreCase("da");
        slefuitor.setEsteProfesional(esteProfesional);
        
        String vitezaText = sViteza.getText().trim().toLowerCase();
        boolean vitezaVariabila = vitezaText.equalsIgnoreCase("da");
        slefuitor.setVitezaVariabila(vitezaVariabila);
        
        slefuitor.setTipSuprafata(sSuprafata.getText());

        try {
            slefuitor.setGarantie(Integer.parseInt(sGarantie.getText()));
        } catch (NumberFormatException e) {
            throw new Exception("Garantia trebuie sa fie un numar intreg!");
        }
        
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();

    model2.addRow(new Object[]{
        slefuitor.getFirma(),
        slefuitor.getPutere(),
        slefuitor.getGreutate(),
        slefuitor.getDimensiuneDisc(),
        slefuitor.isEsteProfesional(),
        slefuitor.isVitezaVariabila(),
        slefuitor.getTipSuprafata(),
        slefuitor.getGarantie()
    });
    
         } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Eroare", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void pFirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pFirmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pFirmaActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    pFirma.setText("");
    pPutere.setText("");
    pGreutate.setText("");
    pTuratii.setText("");
    pPornire.setText("");
    pDiametrul.setText("");
    pTipDisc.setText("");
    pTipAlimentare.setText("");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    sFirma.setText("");
    sPutere.setText("");
    sGreutate.setText("");
    sDimensiune.setText("");
    sProfesional.setText("");
    sViteza.setText("");
    sSuprafata.setText("");
    sGarantie.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//  Le afiseaza pe cele cu dimensiunea discului mai mare de 150mm, au viteza variabila, si tipul suprafetei este "Lemn".
    try {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    List<Slefuitor> slefuitoareFiltrate = new ArrayList<>();

    for (int i = 0; i < model.getRowCount(); i++) {
        String firma = (String) model.getValueAt(i, 0);

        String putereText = model.getValueAt(i, 1).toString();
        int putere = 0;
        try {
            putere = Integer.parseInt(putereText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Puterea nu este valida: " + putereText);
        }

        float greutate = 0;
        try {
            greutate = Float.parseFloat(model.getValueAt(i, 2).toString());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Greutatea nu este valida: " + model.getValueAt(i, 2).toString());
        }

        float dimensiuneDisc = Float.parseFloat(model.getValueAt(i, 3).toString());
        boolean vitezaVariabila = Boolean.parseBoolean(model.getValueAt(i, 5).toString());
        String tipSuprafata = (String) model.getValueAt(i, 6);

        if (dimensiuneDisc > 150 && vitezaVariabila && "lemn".equalsIgnoreCase(tipSuprafata)) {
            Slefuitor slefuitor = new Slefuitor();
            slefuitor.setFirma(firma);
            slefuitor.setPutere(putere);
            slefuitor.setGreutate(greutate);
            slefuitor.setDimensiuneDisc(dimensiuneDisc);
            slefuitor.setVitezaVariabila(vitezaVariabila);
            slefuitor.setTipSuprafata(tipSuprafata);

            slefuitoareFiltrate.add(slefuitor);
        }
    }

    model.setRowCount(0);

    for (Slefuitor slefuitor : slefuitoareFiltrate) {
        model.addRow(new Object[]{
            slefuitor.getFirma(),
            slefuitor.getPutere(),
            slefuitor.getGreutate(),
            slefuitor.getDimensiuneDisc(),
            slefuitor.isEsteProfesional(),
            slefuitor.isVitezaVariabila(),
            slefuitor.getTipSuprafata(),
            slefuitor.getGarantie()
        });
    }

    if (slefuitoareFiltrate.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Nu s-au gasit slefuitoare care sa respecte conditiile specificate!");
    }

} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Eroare la filtrare: " + e.getMessage(), "Eroare", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tabel_polizor_slefuitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tabel_polizor_slefuitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tabel_polizor_slefuitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tabel_polizor_slefuitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tabel_polizor_slefuitor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField pDiametrul;
    private javax.swing.JTextField pFirma;
    private javax.swing.JTextField pGreutate;
    private javax.swing.JTextField pPornire;
    private javax.swing.JTextField pPutere;
    private javax.swing.JTextField pTipAlimentare;
    private javax.swing.JTextField pTipDisc;
    private javax.swing.JTextField pTuratii;
    private javax.swing.JTextField sDimensiune;
    private javax.swing.JTextField sFirma;
    private javax.swing.JTextField sGarantie;
    private javax.swing.JTextField sGreutate;
    private javax.swing.JTextField sProfesional;
    private javax.swing.JTextField sPutere;
    private javax.swing.JTextField sSuprafata;
    private javax.swing.JTextField sViteza;
    // End of variables declaration//GEN-END:variables
}
